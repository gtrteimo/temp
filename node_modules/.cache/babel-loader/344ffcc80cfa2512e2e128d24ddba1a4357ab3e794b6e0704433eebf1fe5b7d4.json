{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Documents\\\\SuedtirolKI\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Box, Typography, TextField, Button, Paper } from '@mui/material';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSendMessage = () => {\n    if (input.trim() !== '') {\n      setMessages([...messages, {\n        text: input,\n        sender: 'user'\n      }]);\n      setInput('');\n\n      // Simulate bot response\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, {\n          text: \"I'm a chatbot! How can I assist you?\",\n          sender: 'bot'\n        }]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: '100vh',\n      paddingTop: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        flex: 1,\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          maxHeight: '400px',\n          overflowY: 'auto'\n        },\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n          message: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          label: \"Type a message\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Box","Typography","TextField","Button","Paper","Message","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","handleSendMessage","trim","text","sender","setTimeout","prevMessages","maxWidth","style","display","flexDirection","justifyContent","height","paddingTop","children","flex","padding","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflowY","map","msg","index","message","alignItems","mt","fullWidth","label","value","onChange","e","target","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lukas/Documents/SuedtirolKI/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Box, Typography, TextField, Button, Paper } from '@mui/material';\r\nimport Message from './Message';\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSendMessage = () => {\r\n    if (input.trim() !== '') {\r\n      setMessages([...messages, { text: input, sender: 'user' }]);\r\n      setInput('');\r\n\r\n      // Simulate bot response\r\n      setTimeout(() => {\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { text: \"I'm a chatbot! How can I assist you?\", sender: 'bot' },\r\n        ]);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"xs\"\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        height: '100vh',\r\n        paddingTop: '20px',\r\n      }}\r\n    >\r\n      <Paper style={{ flex: 1, padding: '20px' }}>\r\n        <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n          Chatbot\r\n        </Typography>\r\n        <Box style={{ maxHeight: '400px', overflowY: 'auto' }}>\r\n          {messages.map((msg, index) => (\r\n            <Message key={index} message={msg} />\r\n          ))}\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mt={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Type a message\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage}>\r\n            Send\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}